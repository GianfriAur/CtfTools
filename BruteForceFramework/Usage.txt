
includi:

using BruteForceFramework;


Istanziamenti:


caso 1 solo con il metodo di test:

BruteForce BT = new BruteForce((a) => { /* TEST */ return true; });



caso 2 col metodo ti test e il charset

string cset=  = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToLower() + "ABCDEFGHIJKLMNOPQRSTUVWXYZ" + "1234567890" + "-_<>!\"@#+*()[]{}%&$£&/\\";

BruteForce BT = new BruteForce((a) => { /* TEST */ return true; },cset);


caso 3 multi thread [500]

BruteForce BT = new BruteForce((a) => { /* TEST */ return true; },cset, BruteForce.AttackType.MultiThreads, 500);    // -1 per non avete un limite		ATTENZIONE!!!!!



Aniliziamo la velocità:

avendo 

public static string SHA512(string input)
{
    var bytes = System.Text.Encoding.UTF8.GetBytes(input);
    using (var hash = System.Security.Cryptography.SHA512.Create())
    {

        var hashedInputBytes = hash.ComputeHash(bytes);
        var hashedInputStringBuilder = new System.Text.StringBuilder(128);
        foreach (var b in hashedInputBytes)
            hashedInputStringBuilder.Append(b.ToString("X2"));
        return hashedInputStringBuilder.ToString();
    }
            
}

string s = SHA512("olleh");

BruteForce BT = new BruteForce((a) => {string hash= SHA512(a);return hash == s;}, "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToLower());  // 0h:00m:41s, ms:459 

BruteForce BT = new BruteForce((a) => {string hash= SHA512(a);return hash == s;}, "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToLower(),BruteForce.AttackType.MultiThreads,500);  // 0h:01m:20s, ms:625 

BruteForce BT = new BruteForce((a) => {string hash= SHA512(a);return hash == s;}, "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToLower(),BruteForce.AttackType.MultiThreads,1000);  // 0h:01m:09, ms:459 

BruteForce BT = new BruteForce((a) => {string hash= SHA512(a);return hash == s;}, "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToLower(),BruteForce.AttackType.MultiThreads,2000);  // 0h:01m:00s, ms:329 

BruteForce BT = new BruteForce((a) => {string hash= SHA512(a);return hash == s;}, "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToLower(),BruteForce.AttackType.MultiThreads,-1);  // 0h:00m:23s, ms:112




EVENTI: 


BT.OnTrueEvent += (a) => { /* TROVATO, a è il risultato */ };
BT.OnFalseEvent += (a) => {  /* NON TROVATO, a è il test */ };		// per una migliore performane non usarlo